#!/usr/bin/env php
<?php

register_autoloader();

use paindriven\turbulence\Logger;
use paindriven\turbulence\Collector;
use paindriven\turbulence\scm\Git;
use paindriven\turbulence\ComplexityService;
use paindriven\turbulence\ChangesService;
use paindriven\turbulence\PlotBuilder;


$params = parse_params($_SERVER['argv']);

$repoDir    = realpath($params['r']);
$outputDir  = rtrim($params['o'], '/');
$path       = $params['p'];
$subjectDir = $repoDir.'/'.$path;

$logger = new Logger();
$result = new Collector();
$scm    = new Git();

if (!$scm->isRepo($repoDir))
	die("\ninvalid repository: {$repoDir}\n\n");
if (!is_dir($outputDir))
	mkdir($outputDir);

$logger->log('calculating complexity...');
$complexity = new ComplexityService($subjectDir, $repoDir, $outputDir);
$result     = $complexity->calculate($result);
$logger->log('calculating changes...');
$changes    = new ChangesService($scm, $path, $repoDir, $complexity->map());
$result     = $changes->calculate($result);

$logger->log('writing results...');
$outFile = $outputDir.'/out.json';
$result->dumpJson($outFile);

$buildViewer = isset($params['v']);
if ($buildViewer) {
	$templateDir = __DIR__.'/../viewer';
	$viewerFile  = $outputDir.'/viewer.html';
	$builder     = new PlotBuilder();
	$builder->buildViewer($outFile, $templateDir, $viewerFile);

	$browser = $params['v'];
	if ($browser)
		`{$browser} {$viewerFile} &`;
}


function register_autoloader() {
	$baseDir = __DIR__.'/../src/';
	if (realpath($baseDir)) {
		set_include_path(get_include_path().PATH_SEPARATOR.$baseDir);
	}
	spl_autoload_register(function($class) {
		if (0 === strpos($class, 'paindriven\\turbulence')) {
			require_once str_replace('\\', '/', $class).'.php';
			return class_exists($class, false) || interface_exists($class, false);
		}
		return false;
	});
}

function parse_params($args) {
	$params    = array();
	$usageText = <<<EOB

Usage: turbulence -r=REPOSITORY_DIR -o=OUTPUT_DIR [-p=PATH_IN_THE_REPO] [-v[=BROWSER_COMMAND]]

Hints:
 -v : generate a viewer.html under OUTPUT_DIR to view result. if BROWSER_COMMAND setted, it launch the browser

EOB;
	foreach (array_slice($args, 1) as $arg) {
		if (!preg_match('/^-(r|p|o|v)=?(.*)$/', $arg, $match)) {
			die($usageText);
		}

		$params[$match[1]] = $match[2];
	}
	if (!isset($params['r']) || !isset($params['o'])) {
		die($usageText);
	}

	$params['p'] = isset($params['p']) ? ltrim($params['p'], '/') : '';

	return $params;
}