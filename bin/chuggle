#!/usr/bin/env php
<?php

register_autoloader();

use paindriven\chuggle\Logger;
use paindriven\chuggle\Collector;
use paindriven\chuggle\GitService;
use paindriven\chuggle\ComplexityService;
use paindriven\chuggle\ChangesService;


$params = parse_params($_SERVER['argv']);

$repoUrl    = $params['r'];
$outputDir  = rtrim($params['o'], '/');
$path       = isset($params['p']) ? ltrim($params['p'], '/') : '';
$repoDir    = $outputDir.'/_repo';
$subjectDir = $repoDir.'/'.$path;

$logger = new Logger();
$result = new Collector();

$logger->log('cloning git repo...');
$git = new GitService();
$git->fetch($repoUrl, $repoDir);

$complexity = new ComplexityService($logger, $subjectDir, $repoDir, $outputDir);
$result     = $complexity->calculate($result);
$changes    = new ChangesService($logger, $path, $repoDir, $complexity->map());
$result     = $changes->calculate($result);

$logger->log('writing results...');
$outFile = $outputDir.'/out.json';
$result->dumpJson($outFile);


function register_autoloader() {
	$baseDir = __DIR__.'/../src/';
	if (realpath($baseDir)) {
		set_include_path(get_include_path().PATH_SEPARATOR.$baseDir);
	}
	spl_autoload_register(function($class) {
		if (0 === strpos($class, 'paindriven\\chuggle')) {
			require_once str_replace('\\', '/', $class).'.php';
			return class_exists($class, false) || interface_exists($class, false);
		}
		return false;
	});
}

function parse_params($args) {
	$params    = array();
	$usageText = <<<EOB

Usage: chuggle -rREPOSITORY_BASE_URL -oOUTPUT_DIR [-pPATH_IN_THE_REPO]


EOB;
	foreach (array_slice($args, 1) as $arg) {
		if (!preg_match('/^-(r|p|o)(.+)$/', $arg, $match)) {
			die($usageText);
		}

		$params[$match[1]] = $match[2];
	}
	if (!isset($params['r']) || !isset($params['o'])) {
		die($usageText);
	}

	return $params;
}